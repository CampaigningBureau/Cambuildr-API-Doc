FORMAT: 1A
HOST: demo.cambuildr.com/api/v1

# Cambuildr


## Pages [/pages]
Pages are Objects, that are displayed in the frontend. The handle the settings of the pages and their properties.

#### Types
Each page has a type of one of the following values:
* `user_generated_content`
* `commitment`
* `voting`
* `advocacy`
* `grassroots`
* `stakeholder`
* `event`

**Please be aware, that depending on the type of each Page, the object contains different properties, as defined in the details.**

#### Visibility
There are 2 conditions, that define if a page is visible or not:
1. **Current date:** the date provided in the `starts_at` property is either `null` or in the past of the current date **and** the date provided in the `ends_at` property is either `null` or in the future of the current date)
2. **Published:** The `is_published` property is set to `true`

A page is visible, when bove conditions are met. To see if a page is visible, we also provide you with the `is_visible` property.


### List all pages - MOA [GET /{?type,q}]

+ Parameters
    + type: `user_generated_content` (enum[string], optional) - filter the pages by type
        + Members
            + `user_generated_content`
            + `commitment`
            + `voting`
            + `advocacy`
            + `stakeholder`
            + `event`
            + `grassroots`
    + q: `searchy` (string, optional) - returns all pages with the value in `internal_name` or `internal_description`.
    
    
+ Response 200 (application/json)

    + Attributes
        + pages (array)
            + (Page User Generated Content) - user generated content page
            + (Page Commitment)
            + (Page Advocacy)
            + (Page Grassroots)
            + (Page Stakeholder)
            + (Page Voting)
            + (Page Event)
        + error: false (boolean) - did any error occur
        + total_count: 7 (number) - the total count of found objects with this filter
    
        
<!-- TODO: error responses -->

# Group Old Stuff

## People [/{customer_identifier}/people]
Communicate with the People-Interface


+ Parameters
    + customer_identifier (string) - a md5-hashed identifier of the desired customer.

### List all people [GET]

+ Response 200 (application/json)

    Returns a list of all existing people

    + Attributes
        - error: `false` (boolean, required)
        - people (array[PUBLIC_PERSON], required)
        - total_count: `1` (number, required)

### Create a person [POST]

+ Request (application/json)

    If a person with the same E-Mail-Address or `id` exists. The Person won't be created. Instead the existing person is returned
    
    + Attributes
        - email: `it@campaigning-bureau.com` (string, required)
        - name: `Martina` (string, optional)
        - surname: `Muster` (string, optional)
        

+ Response 201 (application/json)

    + Attributes
        - error: false (boolean, required)
        - person (PUBLIC_PERSON, required)

### Retrieve a person [GET /{customer_identifier}/people/{id}]

+ Parameters
    + customer_identifier (string) - a md5-hashed identifier of the desired customer.
    + id (int) - The `id` of the person to return
    
+ Response 200 (application/json)

        {
        "error": false,
        "person": {
            "id": 861,
            "name": "Campaigning",
            "surname": "Bureau",
            "created_at": "2015-01-12 15:21:37",
            "updated_at": "2015-01-19 11:16:05",
            "customer_id": 25,
            "unsubscribed": 0,
            "gender": null,
            "language_id": null,
            "phone": null,
            "image_id": 569,
            "blocked": 0,
            "opt_in": 0,
            "identifier": "",
            "image_url": "http://tools.dev/api/v1/7a6238a08d2e1bbe26e5df89ef2ff62b/uploaded_images/569",
            "social_connectors": [],
            "addresses": [{
                "id": 1659,
                "street": "Salztorgasse 7/16",
                "city": "Wien",
                "zip_code": 1010,
                "created_at": "2015-01-19 08:39:31",
                "updated_at": "2015-07-08 13:55:31",
                "lat": 48.2138448,
                "lng": 16.3735838,
                "addressable_id": 861,
                "addressable_type": "Person",
                "country": null
            }]
        }
        }
        
        
        
## Stories [/{customer_identifier}/stories/{module_identifier}]
Communicate with the Stories-Interface

### List all Stories [GET /{customer_identifier}/stories/{module_identifier}{?page_size}{?page_nr}]

+ Parameters
    + customer_identifier (string) - a md5-hashed identifier of the desired customer.
    + module_identifier (string) - a md5-hashed identifier of the desired customer.
    
    + page_size: 2 (int, optional) - number of items to return in one request
        + Default: 20
        
    + page_nr (int, optional) - the numer of the page to load
        + Default: 0

+ Response 200 (application/json)

    Get a paginated list of stories

    + Body
    
            {
            "error": false,
            "stories": [
              {
                "id": 121,
                "person_id": 237,
                "header": "",
                "text": "jklhAaron Sullivan of @Tradiv_Tweet is being introduced by the multi-head of @ShiftCannabis #CBDemo #CannaBizSummit",
                "media_type": "NONE",
                "state": 1,
                "released_date": "2015-11-04 13:16:42",
                "created_at": "2015-06-30 01:00:04",
                "updated_at": "2015-11-06 08:52:17",
                "social_media_provider_id": 3,
                "image_url": "",
                "video_url": "",
                "image_id": null,
                "customer_id": 1,
                "sticky": 1,
                "module_id": 1,
                "language_id": null,
                "votecount": 0,
                "comment_count": 2,
                "avg_rating": null,
                "total_comment_count": 5,
                "name": "The Weed",
                "surname": "Blog",
                "width": null,
                "height": null,
                "smsid": 21,
                "categories": {
                  "1": {
                    "id": 3,
                    "name": "Erstellte Kategorie",
                    "customer_id": 1,
                    "is_voteable": 1,
                    "module_id": 1,
                    "is_commentable": 0,
                    "is_visible": 1,
                    "is_postable": 0,
                    "is_default": 0,
                    "show_comments": 1,
                    "custom_data": null,
                    "language_id": null,
                    "created_at": "2015-10-21 09:05:27",
                    "updated_at": "2015-11-04 13:23:46",
                    "custom_data_decoded": null,
                    "pivot": {
                      "story_id": 121,
                      "category_id": 3
                    }
                  }
                },
                "person": {
                  "id": 237,
                  "name": "The Weed",
                  "image_id": null,
                  "surname": "Blog",
                  "image_url": null
                },
                "tags": [],
                "socialmediastory": {
                  "full_name": "The Weed Blog",
                  "screen_name": "TheWeedBlog",
                  "foreign_user_id": 103728265,
                  "foreign_entry_id": 615683575325720576,
                  "link": "http://twitter.com/TheWeedBlog/status/615683575325720576",
                  "user_profile_picture_url": "//pbs.twimg.com/profile_images/3361225965/0d6464fae0c08cc43ce2f09c70151c4e_normal.png"
                },
                "is_commentable": true,
                "is_postable": true,
                "is_voteable": true
              },
              {
                "id": 148,
                "person_id": 262,
                "header": "",
                "text": "Yo me voy al manzanares.. #AupaAtleti",
                "media_type": "IMG",
                "state": 1,
                "released_date": "2015-11-04 20:32:23",
                "created_at": "2015-11-04 13:19:14",
                "updated_at": "2015-11-04 20:32:23",
                "social_media_provider_id": 2,
                "image_url": "//scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s640x640/sh0.08/e35/12142678_174661489543483_1821850073_n.jpg",
                "video_url": "",
                "image_id": null,
                "customer_id": 1,
                "sticky": 0,
                "module_id": 1,
                "language_id": 2,
                "votecount": 0,
                "comment_count": 0,
                "avg_rating": null,
                "total_comment_count": 0,
                "name": "jose antonio",
                "surname": "sanchez",
                "width": null,
                "height": null,
                "smsid": 880,
                "categories": [
                  {
                    "id": 5,
                    "name": "FuerPagination2",
                    "customer_id": 1,
                    "is_voteable": 0,
                    "module_id": 1,
                    "is_commentable": 1,
                    "is_visible": 1,
                    "is_postable": 1,
                    "is_default": 0,
                    "show_comments": 1,
                    "custom_data": null,
                    "language_id": null,
                    "created_at": "2015-10-21 09:05:27",
                    "updated_at": "2015-10-21 09:09:43",
                    "custom_data_decoded": null,
                    "pivot": {
                      "story_id": 148,
                      "category_id": 5
                    }
                  }
                ],
                "person": {
                  "id": 262,
                  "name": "jose antonio",
                  "image_id": null,
                  "surname": "sanchez",
                  "image_url": null
                },
                "tags": [],
                "socialmediastory": {
                  "full_name": "jose antonio sanchez",
                  "screen_name": "nonogol7",
                  "foreign_user_id": 490608073,
                  "foreign_entry_id": "1103782446176929815_490608073",
                  "link": "https://instagram.com/p/9RbEllsAgX/",
                  "user_profile_picture_url": "//scontent.cdninstagram.com/hphotos-xaf1/t51.2885-19/s150x150/11906193_1490542281242633_367408711_a.jpg"
                },
                "is_commentable": true,
                "is_postable": true,
                "is_voteable": false
              }
            ],
            "total_count": 2
            }

### Create a Story [POST]

+ Parameters
    + customer_identifier (string) - a md5-hashed identifier of the desired customer.
    + module_identifier (string) - a md5-hashed identifier that defines the module to use.
    
+ Request (application/json)

    + Attributes
        - header: `Story-Titel` (string)
        - text: `Text der Story` (string)
        - media_type: `NONE` (enum)
            - NONE
            - IMG
            - VIDEO
        - categories (array[string,number])
            - cc15ffb5c181510
            - e830a0870bcb156
            - Cat ohne Desc
        - person (PUBLIC_PERSON)
            
+ Response 201 (application/json)

            {
              "error": false,
              "story": {
                "id": 159,
                "person_id": 202,
                "header": "Story-Titel",
                "text": "Text der Story",
                "media_type": "NONE",
                "state": 1,
                "released_date": "2015-11-13 14:17:42",
                "created_at": "2015-11-13 14:17:42",
                "updated_at": "2015-11-13 14:17:42",
                "social_media_provider_id": null,
                "image_url": null,
                "video_url": null,
                "image_id": null,
                "customer_id": 1,
                "sticky": 0,
                "module_id": 1,
                "language_id": null,
                "votecount": 0,
                "comment_count": 0,
                "avg_rating": null,
                "total_comment_count": 0,
                "categories": [
                  {
                    "id": 2,
                    "name": "Testkategorie",
                    "customer_id": 1,
                    "is_voteable": 0,
                    "module_id": 1,
                    "is_commentable": 0,
                    "is_visible": 0,
                    "is_postable": 1,
                    "is_default": 1,
                    "show_comments": 0,
                    "custom_data": null,
                    "language_id": null,
                    "created_at": "2015-10-12 11:05:06",
                    "updated_at": "2015-10-21 09:09:28",
                    "custom_data_decoded": null,
                    "pivot": {
                      "story_id": 159,
                      "category_id": 2
                    }
                  }
                ],
                "person": {
                  "id": 202,
                  "name": "Stefan",
                  "surname": "S",
                  "created_at": "2015-01-14 15:42:03",
                  "updated_at": "2015-10-21 11:39:22",
                  "customer_id": 1,
                  "unsubscribed": 0,
                  "gender": null,
                  "language_id": 1,
                  "phone": null,
                  "image_id": null,
                  "blocked": 0,
                  "opt_in": 0,
                  "identifier": "d3f557b96c2df8df06e066a99023efb6",
                  "image_url": null
                }
              }
            }

### Retrieve a Story [GET /{customer_identifier}/stories/{module_identifier}/{id}]

+ Parameters
    + customer_identifier (string) - a md5-hashed identifier of the desired customer.
    + module_identifier (string) - a md5-hashed identifier that defines the module to use.
    + id (number) - The `id` of the story to load

+ Response 200 (application/json)

    + Attributes
        
        - error: false (boolean)
        - story (PUBLIC_STORY)



## Commitment [/{customer_identifier}/commitments/{module_identifier}]

### List all Commitments [GET /{customer_identifier}/commitments/{module_identifier}/people{?page_size}{?page_nr}]

+ Parameters
    + customer_identifier (string) - a md5-hashed identifier of the desired customer.
    + module_identifier (string) - a md5-hashed identifier of the desired customer.
    
    + page_size: 2 (int, optional) - number of items to return in one request
        + Default: 20
    + page_nr (int, optional) - the numer of the page to load
        + Default: 0

+ Response 200 (application/json)
    
    + Attributes
        - error: `false` (boolean, required) - Flags the response as successfuly or not
        - commitment_module_people (array[PUBLIC_COMMITMENT], required) - Contains the requested data
        - total_count: `1` (number, required) - Counts the total number of entries available

### Create a Commitment [POST]

+ Parameters
    + customer_identifier (string) - a md5-hashed identifier of the desired customer.
    + module_identifier (string) - a md5-hashed identifier that defines the module to use.

+ Request (application/json)

    + Attributes
        
        - message: `Eine Nachricht` (string, optional)
        - person (object, required)
            - email: `stefan.schindler@campaigning-bureau.com` (string, required)
        - show_public: true (boolean, optional)

+ Response 201 (application/json)
    
            {
              "error": false,
              "message": "Save successful",
              "person_id": 1645,
              "person_identifier": "912b6f501e8398f4ed4cafdf34c80b96",
              "is_new": true,
              "person": {
                "identifier": "912b6f501e8398f4ed4cafdf34c80b96",
                "customer_id": 25,
                "updated_at": "2015-11-14 11:58:52",
                "created_at": "2015-11-14 11:58:52",
                "id": 1645,
                "image_url": null,
                "tags": []
              },
              "commitment_id": 927
            }

### Retrieve a Commitment [GET /{customer_identifier}/commitments/{module_identifier}/people/{id}]

+ Parameters
    + customer_identifier (string) - a md5-hashed identifier of the desired customer.
    + module_identifier (string) - a md5-hashed identifier that defines the module to use.
    + id (number) - the id of the commitment to retrieve


+ Response 200 (application/json)

            {
                error: false,
                commitment_module_person: {
                    person_id: 216,
                    message: "Beschreibung&nbsp; hier",
                    state: 1,
                    released_date: "2015-10-23 13:52:50",
                    created_at: "2015-02-12 14:40:10",
                    updated_at: "2015-10-23 13:52:50",
                    image_id: null,
                    module_id: 2,
                    id: 130,
                    show_public: 1,
                    sticky: 1,
                    customer_id: 1,
                    image_url: null,
                    person: {
                        id: 216,
                        name: "Franz",
                        surname: "Kaiser",
                        created_at: "2015-02-12 14:40:10",
                        updated_at: "2015-11-04 12:54:18",
                        customer_id: 1,
                        unsubscribed: 0,
                        gender: null,
                        language_id: 2,
                        phone: null,
                        image_id: null,
                        blocked: 0,
                        opt_in: 0,
                        identifier: "e1490ebf180cfac3541586034dee6a53",
                        image_url: null,
                        tags: [ ]
                    }
                }
            }



## Events [/{customer_identifier}/events/{module_identifier}]

+ Parameters
    + customer_identifier (string) - a md5-hashed identifier of the desired customer.
    + module_identifier (string) - a md5-hashed identifier of the desired customer.

### List all Events [GET /{customer_identifier}/events/{module_identifier}{?page_size}{?page_nr}]

+ Parameters
    + page_size: 1 (int, optional) - number of items to return in one request
        + Default: 20
    + page_nr (int, optional) - the numer of the page to load
        + Default: 0

+ Response 200 (application/json)
    
    + Attributes
        - error: `false` (boolean, required) - Flags the response as successfuly or not
        - events (array[PUBLIC_EVENT], required) - Contains the requested data
        - total_count: `1` (number, required) - Counts the total number of entries available

### Create an Event [POST]

+ Request (application/json)
            
            {
              "name": "Name of Event",
              "description": "Decription of Event",
              "notify_on_participation_email": 0,
              "notify_on_participation_facebook": 0,
              "event_category_id": 16,
              "starts_at": "2015-05-19 10:00:00",
              "ends_at": "2015-09-26 10:00:00",
              "address": {
                "zip_code": 1010
              },
            "capacities":""
            }

+ Response 401 (application/json)

            {
              "error": true,
              "message": "Unauthorized"
            }

### Retrieve an Event [GET /{customer_identifier}/events/{module_identifier}/{id}]

+ Parameters
    + customer_identifier (string) - a md5-hashed identifier of the desired customer.
    + module_identifier (string) - a md5-hashed identifier of the desired customer.
    
    + id (number) - the `id` of the commitment to retrieve
    
+ Response 200 (application/json)

    + Attributes
        - error: false (boolean, required)
        - event (PUBLIC_EVENT, required)
        
# Data Structure

## `Page Base` (object)
+ id: `1` (number) - the internal id of the page
+ identifier: `de361b33f0a699a37a733c10d5c4835a` (string) - the internal identifier of the object
+ internal_name: `Page Name` (string) - the internal name of the page used for the administration view
+ internal_description: `Page Description` (string) - the internal description of the page used for the administration view
+ type: `asdf` (enum[string], required) - the type of the page
    + Members
        + `user_generated_content`
        + `commitment`
        + `voting`
        + `advocacy`
        + `stakeholder`
        + `event`
        + `grassroots`
+ starts_at: `2015-06-30 01:00:04` (string, nullable) - defines the earliest date the page is publicly visible. if `null`, then there is no restriction for the visibility in the past (`nullable`)
+ ends_at: `2016-06-30 01:00:04` (string, nullable) - defines the latest date the page is publicly visible. if `null`, then there is no restriction for the visibility in the future (`nullable`)
+ is_published: `true` (boolean) - toggles the visibility of the page
+ is_visible: `true` (boolean) - calculated property to tell if the page is currently visible or not (see page description)
+ language_id: `1` (number) - the internal id of the language used, could also be null
+ image_id: `1` (number) - the id of the header sujet image
+ share_image_id: `2` (number) - the id of the share image in the OG-tags of the page
+ theme: `null` (string, nullable) - the theme used for this page. if `null`, then the default theme is used (`nullable`)
+ locked: `false` (boolean) - the page is locked for editing, because some magical stuff happens here
+ name: `Title` (string) - the title of the page
+ description: `Subtext of the page` (string) - the subtext of the page
+ embedded_in: `https://demo.cambuildr.com/u/1` (string) - the domain, where the page can be found
+ `redirect_url_if_inactive`: `https://page-not-found.com` (string, nullable) - the domain to redirect to, if the page is not visible (`nullable`)

## `Page User Generated Content` (Page Base)
+ type: `user_generated_content` (fixed) - the type of the page
+ `ugc__categories_exclusive_enabled`: true (boolean) - are the ugc categories exclusive (default: `true`)
+ `ugc__comments_moderated_enabled`: true (boolean) - are the ugc comments moderated (default: `true`)
+ `ugc__socialmedia_moderated_enabled`: true (boolean) - are the social media contents moderated (default: `true`)
+ `ugc__socialmedia_retweets_enabled`: true (boolean) - should retweets also be imported from twitter (default: `true`)
+ `ugc__placeholder_message`: `It was a bright cold day in april,...` (string) - the placeholder used for the ugc text inputfield
+ `random_order_enabled`: `false` (boolean) - should the order of the stories be randomized on the page (default: `false`)
+ `text_thank_you`: `Thank you` (string) - the thank you message to be displayed after the submit
+ `text_disclaimer`: `I am a disclaimer` (string) - the disclaimer to be print under the submit button
+ `moderation_enabled`: `true` (boolean) - should the content be moderated (default: `true`)
+ `moderation_message`: `Let us first have a look at this` (string) - the message to be displayed if the contents are moderated
+ `abbreviate_lastname`: `false` (boolean) - should the lastnames of the participants be abbreviated for privacy reasons (default: `false`)
+ `text_submit_button`: `Submit` (string) - the text for the submit button
+ `text_form_open_button`: `Typical CTA text` (string) - the text for the CTA above the form

## `Page Commitment` (Page Base)
+ type: `commitment` (fixed) - the type of this page
+ `random_order_enabled`: `false` (boolean) - should the order of the stories be randomized on the page (default: `false`)
+ `zip_required`: `false` (boolean) - the zip codes need to be provided to send your commitment (default: `false`)
+ `content_share_default_image`: `6` (number, nullable) - the id of the default image for the og tags, when sharing a commitment with no image (`nullable`)
+ `content_share_default_title`: `Look, I am on Facebook` (string, nullable) - the default title for the og tags, when sharing a commitment with no message (`nullable`)
+ `self_tagging_enabled`: `false` (boolean) - the participant can tag himself after participating (default: `false`)
+ `commitment__signup_header_photo`: `Let us see your pretty face` (string) - the text to be shown as header in the photo part of the signup flow
+ `commitment__signup_header_statement`: `Whats your opinion on that` (string) - the text to be shown as header in the statement part of the signup flow
+ `commitment__signup_header_tags`: `What tags describe you` (string) - the text to be shown as header in the tags part of the signup flow
+ `text_thank_you`: `Thank you` (string) - the thank you message to be displayed after the submit
+ `text_disclaimer`: `I am a disclaimer` (string) - the disclaimer to be print under the submit button
+ `moderation_enabled`: `true` (boolean) - should the content be moderated (default: `true`)
+ `moderation_message`: `Let us first have a look at this` (string) - the message to be displayed if the contents are moderated
+ `abbreviate_lastname`: `false` (boolean) - should the lastnames of the participants be abbreviated for privacy reasons (default: `false`)
+ `text_form_open_button`: `Typical CTA text` (string) - the text for the CTA above the form

## `Page Advocacy` (Page Base)
+ type: `advocacy` (fixed) - the type of this page
+ `goal_enabled`: `false` (boolean) - defines if a goal of desired participants is set (default: `false`)
+ `goal`: `100` (number, nullable) - the desired goal of participants (`nullable`, default: `null`)
+ `advocacy__email_subject`: `I am the subject` (string, nullable) - the subject of the mail to send the recipients (`nullable`)
+ `advocacy__email_body`: `It was a bright cold day in april,...` (string, nullable) - the body of the mail to send the recipients (`nullable`)
+ `advocacy__criterion_enabled`: `false` (boolean) - should a criterion be provided for the participants (default: `false`)
+ `advocacy__criterion_label`: `Criterion` (string, nullable) - the criterion to choose as participant (`nullable`, default: `null`)
+ `advocacy__recipient_text`: `Hubert Farnsworth <hubert@planet-express.com>` (string, nullable) - the list of all recipients as displayed in the administration (`nullable`)
+ `advocacy__recipient_count`: `1` (number) - the calculated number of recipients
+ `advocacy__participant_count`: `1` (number) - the calculated number of recipients
+ `optin_enabled`: `false` (boolean) - participants need to confirm an optin-mail (default: `false`)
+ `text_thank_you`: `Thank you` (string) - the thank you message to be displayed after the submit
+ `text_disclaimer`: `I am a disclaimer` (string) - the disclaimer to be print under the submit button
+ `text_submit_button`: `Submit` (string) - the text for the submit button

## `Page Grassroots` (Page Base)
+ type: `grassroots` (fixed) - the type of this page
+ `text_thank_you`: `Thank you` (string) - the thank you message to be displayed after the submit
+ `text_disclaimer`: `I am a disclaimer` (string) - the disclaimer to be print under the submit button
+ `moderation_enabled`: `true` (boolean) - should the content (the grassroot campaigns, **not** the participants) be moderated (default: `true`)
+ `moderation_message`: `Let us first have a look at this` (string) - the message to be displayed if the campaigns are moderated
+ `text_submit_button`: `Submit` (string) - the text for the submit button to create a campaign
+ `grassroots__auth_code`: `random_string` (string) - provided auth key to administer a grassroot campaign as owner
+ `grassroots__commitment_page_id`: `1` (number, required) - the id of the belonging commitment page
+ `grassroots__commitment_page` (Page Commitment) - the commitment page object of the belonging commitment page

## `Page Stakeholder` (Page Base)
+ type: `stakeholder` (fixed) - the type of this page
+ `stakeholder__header_actions`: `Here come the actions` (string) - the text to be shown above of the actions
+ `stakeholder__partner_image_id`: `99` (number, nullable) - the id of the partner image (`nullable`)
+ `stakeholder__cbref`: `random_string` (string) - provided internal reference to map actions to stakeholders (default: `true`)
+ `stakeholder__key`: `random_string` (string) - provided key for stakeholders to see the analytics of their page
+ `stakeholder__create_people_count`: `11` (number) - count of new people that first signed up with any action provided by this stakeholder (default: `0`)
+ `stakeholder__reached_people_count`: `22` (number) - count of people that made any action provided by this stakeholder, regardless if they are new or existing people (default: `0`)
+ `stakeholder__view_count`: `33` (number) - count of people that opened this stakeholder page (default: `0`)

## `Page Voting` (Page Base)
+ type: `voting` (fixed) - the type of this page
+ `voting__question`: `To be or not to be, that is the question!` (string) - question of the voting
+ `voting_votecount`: `4711` (number) - number of all votes given on this voting
+ `voting__answercount`: `3` (number) - number of answers provided for this voting (default: `0`)
+ `text_thank_you`: `Thank you` (string) - the thank you message to be displayed after the submit
+ `text_disclaimer`: `I am a disclaimer` (string) - the disclaimer to be print under the submit button

## `Page Event` (Page Base)
+ type: `event` (fixed) - the type of this page


## `PUBLIC_PERSON` (object)
- id: `1644` (number, required)
- name: `Martina` (string, optional)
- surname: `Muster` (string, optional)
- identifier: `de361b33f0a699a37a733c10d5c4835a` (string, required)
- customer_id: `25` (number, required)
- updated_at: `2015-11-13 08:55:24` (string, required)
- created_at: `2015-11-13 08:55:24` (string, required)
- image_id (number, optional)
- image_url (string, optional)

## `PUBLIC_TAG` (object)
- id: `1` (number, required)

## `PUBLIC_STORY` (object)
- id: `121` (number, required)
- person_id: `237` (number, required)
- header (string, optional)
- text: `jklhAaron Sullivan of @Tradiv_Tweet is being introduced by the multi-head of @ShiftCannabis #CBDemo #CannaBizSummit` (string, required)
- media_type: "NONE" (enum)
    - NONE
    - IMG
    - VIDEO
- state: `1` (enum)
    - 0 - State for new
    - 1 - State for released
    - 2 - State for blocked
- released_date: `2015-11-04 13:16:42` (string, optional)
- created_at: `2015-06-30 01:00:04` (string, required)
- updated_at: `2015-11-06 08:52:17` (string, optional)
- image_url (string, optional)
- video_url (string, optional)
- image_id (number, optional),
- customer_id: `1` (number, required)
- sticky: `true` (boolean, required)
- module_id: `1` (number, required)
- language_id (number, optional)
- votecount: `0` (number, optional)
- comment_count: `2` (number, optional)
- avg_rating (number, optional)
- total_comment_count: `5` (number, optional)
- width (number, optional)
- height (number, optional)
- name: `The Weed` (string, required)
- surname: `B` (string, required)
- is_visible: `true`
- postcard (boolean, optional)
- is_commentable: `true` (boolean, required)
- is_postable: `true` (boolean, required)
- is_voteable: `true` (boolean, required)

- categories (object, optional)
    - 1 (PUBLIC_STORY_CATEGORY)
    
- story_comments (array[PUBLIC-STORY-COMMENT], optional)

- person (object, required)
    - id: `237` (number, required)
    - name: `"The Weed"` (string, optional)
    - surname: `"B"` (string, optional)
    - image_id (number, optional)
    - image_url (string, optional)

- tags (array, optional)

- social_media_provider_id: `3` (number, optional)
- smsid: `21` (number, optional)
- socialmediastory (object, optional)
    - full_name: `The Weed Blog` (string, required)
    - screen_name: `TheWeedBlog` (string, required)
    - foreign_user_id: `103728265` (number, required)
    - foreign_entry_id: `615683575325720576` (number, required)
    - link: `http://twitter.com/TheWeedBlog/status/615683575325720576` (string, required)
    - user_profile_picture_url: `//pbs.twimg.com/profile_images/3361225965/0d6464fae0c08cc43ce2f09c70151c4e_normal.png` (string, required)

## `PUBLIC_STORY_CATEGORY` (object)
- id: `3` (number, required)
- name: "Erstellte Kategorie",
- customer_id: `1` (number, required)
- is_voteable: `true` (boolean, required)
- module_id: `1` (number, required)
- is_commentable: false (boolean, required)
- is_visible: `true` (boolean, required)
- is_postable: false (boolean, required)
- is_default: false (boolean, required)
- show_comments: `true` (boolean, required)
- custom_data (string, optional)
- language_id (number, optional)
- created_at: `2015-10-21 09:05:27` (string, required)
- updated_at: `2015-11-04 13:23:46` (string, required)
- custom_data_decoded (object, optional)
- pivot (object, required)
    - story_id: `121` (number, required)
    - category_id: `3` (number, required)

## `PUBLIC-STORY-COMMENT` (object)
- id: `12` (number, required)
- module_id: `1` (number, required)
- person_id: `1` (number, required)
- story_id: `121` (number, required)
- text: `Ein Kommentar im FF` (string, required)
- rating (number, optional)
- state: 1 (enum, required)
    - 0
    - 1
    - 2

- released_date: `2015-10-21 13:14:13` (string, required)
- created_at: `2015-10-21 13:14:13` (string, required)
- updated_at: `2015-10-21 13:14:13` (string, required)
- vote_count: 0 (number, required)

- image_id (number, optional)
- image_url (string, optional)

## `PUBLIC_COMMITMENT` (object)
- id: `130` (number, required)
- person_id: `216` (number, required)
- message: `Beschreibung hier` (string, optional)
- state: 1 (enum[number], required)
    - 0
    - 1
    - 2
- released_date: `2015-10-23 13:52:50` (string, required)
- created_at: `2015-02-12 14:40:10` (string, required)
- updated_at: `2015-10-23 13:52:50` (string, required)
- module_id: `2` (number, required)
- show_public: `true` (boolean, required)
- sticky: `true` (boolean, required)
- customer_id: `1` (number, required)
- name: `Franz` (string, required)
- surname: `Kaiser` (string, required)
- image_id (number ,optional)
- image_url (string ,optional)
- person (object, required)
    - id: `216` (number, required)
    - name: `Franz` (string, optional)
    - surname: `Kaiser` (string, optional)
    - created_at: `2015-02-12 14:40:10` (string, required)
    - updated_at: `2015-11-04 12:54:18` (string, required)
    - customer_id: `1` (number, required)
    - unsubscribed: `false` (boolean, required)
    - gender: `M` (enum[string], optional)
        - F
        - M
    - language_id: `2` (number, required)
    - phone (string, optional)
    - blocked: `false` (boolean, required)
    - opt_in: `false` (boolean, required)
    - identifier: e1490ebf180cfac3541586034dee6a53,
    - image_id (number, optional)
    - image_url (number, optional)
    - addresses (array, optional)
    - social_connectors (array, optional)
    - tags (array, optional)

## `PUBLIC_EVENT` (object)
- id: `105` (number, required)
- module_id: `4` (number, required)
- event_category_id: `1` (number, required)
- state: `1` (enum[number], required)
    - 0
    - 1
    - 2
- name: `Meine tolle Geburtstagsparty` (string, required)
- description: `Ich will Geburtstag feiern, feierst du mit?` (string, optional)
- host_user_id: `9` (number, required)
- host_alias (string, optional)
- host_contact: `Telefon 0664 88313666, oder: facebook.com/christian.knoflach` (string, optional)
- starts_at: `2015-02-27 16:30:00` (string, required)
- ends_at: `2015-02-27 14:57:00` (string, required)
- location_name: `Campaigning Bureau` (string, optional)
- location_directions (string, optional)
- custom_field_label: `DUX` (string, optional)
- rsvp_acceptance_level: `ALL` (enum[string], required)
    - ALL
    - REQUIRED
    - NONE
- invitation_level: `USER` (enum[string], required)
    - HOST
    - PARTICIPANT
    - USER
- participant_visibility_level: `ALL` (enum[string], required)
    - ALL
    - PARTICIPANT
    - HOST
- official: `false` (boolean, required)
- cancelled: `false` (boolean, required)
- max_friends: `10` (number, required)
- created_at: `2015-02-27 15:12:07` (string, required)
- updated_at: `2015-11-11 12:57:05` (string, required)
- customer_id: `1` (number, required)
- user_is_host: `false` (boolean, required)
- user_is_participant: `false` (boolean, required)
- total_participants: `0` (number, required)
- follower_count: `0` (number, required)
- image_id: `232` (number, optional)
- image_url: `http://dev.demo.campaigning-tools.com/tools/api/v1/7a6238a08d2e1bbe26e5df89ef2ff62b/uploaded_images/232` (string, optional)

- host_object (object, required)
    - person (object, required)
        - id: `226` (number, required)
        - surname: `Knoflach` (string, required)
        - name: `Christian` (string, required)
        - image_url (number, optional)

- addresses (array, required)
    - (object, required)
        - id: `110` (number, required)
        - street: `Gölsdorfgasse 4` (string, optional)
        - city: `Wien` (string, optional)
        - zip_code: `1010` (string, optional)
        - created_at: `2015-02-27 15:12:07` (string, required)
        - updated_at: `2015-02-27 15:12:07` (string, required)
        - lat: `48.2140829` (number, required)
        - lng: `16.373259` (number, required)
        - addressable_id: `105` (number, required)
        - addressable_type: `CampaigningToolsEvent` (string, required)
        - country (string, optional)


- event_category (object, required)
    - id: `1` (number, required)
    - module_id: `4` (number, required)
    - name: Demotools `Events Kategorie 1` (string, required)
    - description: `Description für Kategorie 1` (string, optional)
    - users_can_create_event: `true` (boolean, required)
    - participant_requires_name: `false` (boolean, required)
    - participant_requires_zip: `false` (boolean, required)
    - participant_requires_address: `false` (boolean, required)
    - participant_requires_phone: `false` (boolean, required)
    - created_at: `2015-01-14 15:26:41` (string, required)
    - updated_at: `2015-11-06 09:00:07` (string, required)
    - image_id (number, optional)
    - is_default: `false` (boolean, required)
    - image_url (string, optional)
  
- event_capacities (array, required)
    - (object, required)
        - id: `200` (number, required)
        - module_id: `4` (number, required)
        - event_id: `105` (number, required)
        - name: `Die Default-Kategorie, ha!` (string, required)
        - max_people: `15` (number, required)
        - created_at: `2015-02-27 15:12:07` (string, required)
        - updated_at: `2015-02-27 15:12:07` (string, required)
        - total_participants: `0` (number, required)
        - event_rsvps (array, required)